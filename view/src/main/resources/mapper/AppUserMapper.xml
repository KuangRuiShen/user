<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.view.mapper.AppUserMapper">

<resultMap id="baseMap" type="com.app.view.pojo.AppUser">
		<id property="id" column="id" />
		<result property="valid_time" column="valid_time" />
		<result property="recharge_time" column="recharge_time" />
		<result property="invite_id" column="invite_id" />
		<result property="role_id" column="role_id" />
		<result property="roleText" column="roleText" />
		<result property="money" column="money" />
		<result property="create_time" column="create_time" />
	</resultMap>
	
	
	<select id="find" resultMap="baseMap">
		select  u.id,u.valid_time,u.recharge_time,u.invite_id,u.role_id,c.name as roleText,u.create_time,
		IFNULL((select sum(m.total_fee) from user_order a  left join menoy_info m on a.out_trade_no = m.out_trade_no where a.user_id =u.id),0) money
		from user u left join code c on c.code_id = u.role_id  and c.type='level'
 		<where>
 			<if test="id !=null and id != '' ">
		 		( u.id like CONCAT('%', #{id}, '%') or u.invite_id like CONCAT('%', #{id}, '%') )
		 	</if>	
		 	<if test="invite_id !=null and invite_id != '' ">
		 		and u.invite_id =#{invite_id}
		 	</if>	
		 	<if test=" bTime !=null and eTime != null ">
		 	  and u.recharge_time between #{bTime} and #{eTime}
		 	</if>
		 	<if test=" bTime !=null and eTime != null ">
		 	  and u.recharge_time between #{bTime} and #{eTime}
		 	</if>
		 		 		
 		</where>
 		order by u.recharge_time desc
	</select>
	
	<insert id="add" parameterType="com.app.view.pojo.AppUser" >
		  <trim>
			  INSERT INTO USER (id,valid_time,recharge_time,
			  <if test="invite_id != null and invite_id !='' ">
			  invite_id,
			  </if>	  
			  role_id,create_time) 
			  VALUES(#{id},#{valid_time},#{recharge_time},
			    <if test="invite_id != null and invite_id !='' ">
			  #{invite_id}, 
			  </if>	  
			  #{role_id},now())  
		  </trim>
	</insert>
	
	<update id="update" parameterType="com.app.view.pojo.AppUser">
	    UPDATE USER SET		
		valid_time=#{valid_time},
		recharge_time=#{recharge_time},
		role_id=#{role_id}
		WHERE id = #{id}
	</update>
	
	
	<select id="findById" parameterType="java.lang.String" resultType="com.app.view.pojo.AppUser">
		select  u.id,u.valid_time,u.recharge_time,u.invite_id,u.role_id,c.name as roleText,u.create_time
 		from user u left join code c on c.code_id = u.role_id  and c.type='level'
 		where u.id = #{id}
	</select>
	
	
	<select id="getMange" resultType="java.util.Map">
	select *,IFNULL((select sum(m.total_fee) from user_order a  left join menoy_info m on a.out_trade_no = m.out_trade_no 
	left join user  on 	user.id = a.user_id WHERE 	user.invite_id = u.id),0) as total,
	(select count(m.id) from user m where m.invite_id = u.id) as people
	from user u where u.invite_id is null order by CONVERT(id,SIGNED)
	</select>
	
	<select id="log" resultType="java.util.Map">
	select a.out_trade_no ,a.start_time,a.total_fee,a.body,a.trade_type,m.total_fee as act_fee,m.payment_time,m.trade_no,m.end_time
	 from user_order a  left join menoy_info m on a.out_trade_no = m.out_trade_no 
	 where a.user_id =#{uid}  
	  order by m.trade_no desc,m.end_time desc  
	</select>
	
	<select id="order" resultType="java.util.Map">
	select a.user_id,a.out_trade_no ,a.start_time,a.total_fee,a.body,a.trade_type,
	 m.total_fee as act_fee,m.payment_time,m.trade_no,m.end_time
	 from user_order a  left join menoy_info m on a.out_trade_no = m.out_trade_no 
	 <where> 
	 	<if test=" name !=null and name != '' ">
		 	 m.trade_no like CONCAT('%', #{name}, '%') 
		 </if>
		  and m.trade_no is not null
	 </where>
	 	  order by m.trade_no desc,m.end_time desc  
	</select>
	
	
	
	
</mapper>